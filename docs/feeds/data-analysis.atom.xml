<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Giliard Godoi - data-analysis</title><link href="https://giliardgodoi.github.io/" rel="alternate"></link><link href="https://giliardgodoi.github.io/feeds/data-analysis.atom.xml" rel="self"></link><id>https://giliardgodoi.github.io/</id><updated>2025-03-04T00:00:00-03:00</updated><subtitle>Pesquisador. Aluno de Doutorado. Processamento de Língua Natural. Ingeligência Artificial.
Aprendizado de Máquina. Análise e Visualização de Dados.
Programador Python.
</subtitle><entry><title>Análise dos casos de violência doméstica no Norte Pioneiro do Paraná</title><link href="https://giliardgodoi.github.io/articles/2023/exemplo-analise-dados-violencia-domestica/" rel="alternate"></link><published>2023-08-04T00:00:00-03:00</published><updated>2025-03-04T00:00:00-03:00</updated><author><name>Giliard Godoi</name></author><id>tag:giliardgodoi.github.io,2023-08-04:/articles/2023/exemplo-analise-dados-violencia-domestica/</id><summary type="html">&lt;p&gt;Um exemplo de extração de dados de&amp;nbsp;arquivos &lt;code&gt;pdf&lt;/code&gt; com o software&amp;nbsp;Tabula.&lt;/p&gt;</summary><content type="html">&lt;p&gt;No ano de 2020, a Câmara Municipal de Santo Antônio da Platina solicitou à Secretaria de Segurança Pública do Estado do Paraná dados sobre casos de violência doméstica e contra a mulher.
O requerimento de solicitação está disponibilizado no site da entidade no &lt;a href="https://sapl.santoantoniodaplatina.pr.leg.br/materia/2613"&gt;seguinte link&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;O problema é que essas solicitações são respondidas em formatos de arquivos fechados, como arquivos em formado &lt;code&gt;pdf&lt;/code&gt;, que impedem a leitura de dados por outros programas de computador.
E com isso impedem também a realização de outras análises.&lt;/p&gt;
&lt;p&gt;O software &lt;a href="https://tabula.technology/"&gt;Tabula&lt;/a&gt; é um extrator de tabelas de documentos em &lt;code&gt;PDF&lt;/code&gt;.
Com é possível extrair os dados das tabelas e exportar para arquivos abertos como arquivos com valores separados por vírgulas (csv - &lt;a href="https://pt.wikipedia.org/wiki/Comma-separated_values"&gt;Comma-Separated Values&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Esse é um programa feito em Java, então você vai precisar instalar o Java na sua máquina para executar o Tabula. As instruções para instalação podem ser encontradas na documentação do repositório da ferramenta, disponível nesse &lt;a href="https://github.com/tabulapdf/tabula?tab=readme-ov-file#using-tabula"&gt;endereço&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Após executar o programa, só precisa selecionar o arquivo em &lt;span class="caps"&gt;PDF&lt;/span&gt; e selecionar a área em que está a sua tabela.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Exemplo do software Tabula" class="mx-auto d-block img-fluid" src="./tabula-exemplo.png"/&gt;&lt;/p&gt;
&lt;p&gt;E então, o programa cuida do resto…&lt;/p&gt;
&lt;p&gt;&lt;img alt="Dados extraidos com o software tabula" class="mx-auto d-block img-fluid" src="./tabula-exemplo-dois.png"/&gt;&lt;/p&gt;
&lt;p&gt;Com os dados em um formato aberto, então é possível realizar a leitura com um código em Python, por exemplo, e realizar análises complementares e criar gráficos como o observados a seguir.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;seaborn&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;sns&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;

&lt;span class="n"&gt;anos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;'20&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;

&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'tabela-03-dados.csv'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'TOTAL'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;anos&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;anos&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;df2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;melt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;id_vars&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"MUNICÍPIO"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="n"&gt;value_vars&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;anos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;var_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"ANO"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;value_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'value'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;select&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'MUNICÍPIO'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"SANTO ANTONIO DA PLATINA"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'MUNICÍPIO'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"JACAREZINHO"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;fig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lineplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;df2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                 &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"ANO"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                 &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"value"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                 &lt;span class="n"&gt;units&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"MUNICÍPIO"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                 &lt;span class="n"&gt;estimator&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                 &lt;span class="n"&gt;markers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                 &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;".7"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                 &lt;span class="n"&gt;linewidth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                 &lt;span class="n"&gt;legend&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;g4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lineplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;df2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                  &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"ANO"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"value"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="n"&gt;hue&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"MUNICÍPIO"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="n"&gt;markers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="n"&gt;dashes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="n"&gt;legend&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;despine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Quantidade"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Ano"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O gráfico a seguir apresenta a quantidade dos casos de violência doméstica, por natureza jurídica, nos municípios da região do Norte Pioneiro do Estado do Paraná, no período de 01/01/2016 a 31/12/2020.&lt;/p&gt;
&lt;!-- ![Registro de violência doméstica no Norte Pioneiro](../../images/2023/grafico-violencia-domestica-norte-pioneiro.png) --&gt;
&lt;p&gt;&lt;img alt="Registro de violência doméstica no Norte Pioneiro" class="mx-auto d-block img-fluid" src="./grafico-violencia-domestica-norte-pioneiro.png"/&gt;&lt;/p&gt;
&lt;p&gt;No eixo vertical (eixo Y) temos representado a quantidade de casos, enquanto que no eixo horizontal (eixo X) são representados os anos de 2016 à 2020.
Os municípios de Jacarezinho e Santo Antônio da Platina estão destacados, enquanto os demais municípios do Norte Pioneiro estão representados por linhas cinza-claro.&lt;/p&gt;
&lt;p&gt;Com essa representação é possível observar que o município de Jacarezinho se destaca entre os demais.
A razão para tanto, pode ser que este é o único município da região que possui uma Delegacia Especial da Mulher.&lt;/p&gt;
&lt;p&gt;Nesse cenário, podemos levantar a hipótese se existe uma subnotificação dos casos de violência doméstica nos demais municípios que não contam com uma unidade especializada para atender a esses casos.&lt;/p&gt;
&lt;h1&gt;Aviso&lt;/h1&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;As opiniões expressas nesse artigo são somente minhas, e não refletem necessáriamente a opinião de instituições ou pessoas eventualmente citadas nesse artigo.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;Referências&lt;/h1&gt;
&lt;p&gt;Câmara de Santo Antônio da Platina. &lt;strong&gt;Requerimento nº 598 de 2020, de autoria da Vereadora Mirian Rodrigues Bonomo Montanheiro&lt;/strong&gt;. Disponível em: &lt;a href="https://sapl.santoantoniodaplatina.pr.leg.br/materia/2613"&gt;https://sapl.santoantoniodaplatina.pr.leg.br/materia/2613&lt;/a&gt;. Último acesso em 07 de abr. de 2024.&lt;/p&gt;
&lt;p&gt;Tabula Oficial Webpage. &lt;a href="https://tabula.technology/"&gt;https://tabula.technology/&lt;/a&gt;&lt;/p&gt;</content><category term="data-analysis"></category></entry><entry><title>Dados sobre eleições municipais</title><link href="https://giliardgodoi.github.io/articles/2023/dados-eleicoes-municipais-parana/" rel="alternate"></link><published>2023-06-21T00:00:00-03:00</published><updated>2023-06-21T00:00:00-03:00</updated><author><name>Giliard Godoi</name></author><id>tag:giliardgodoi.github.io,2023-06-21:/articles/2023/dados-eleicoes-municipais-parana/</id><summary type="html">&lt;p&gt;Dados históricos sobre canditados eleitos e votação para as eleições&amp;nbsp;municipais&lt;/p&gt;</summary><content type="html">&lt;p&gt;Em 2022 um aluno de mestrado em Geografia veio até o meu trabalho, a Câmara Municipal, perguntando se tínhamos dados históricos sobre as eleições do Município: os candidatos, partidos, quantidade de votos.&lt;/p&gt;
&lt;p&gt;Nós não temos esse tipo de dados prontos.&lt;/p&gt;
&lt;p&gt;Disse a ele que possivelmente no site da Justiça Eleitoral ele poderia encontrar esses dados. Aquele dia foi um dia atribulado, várias pessoas querendo conversar comigo e não pude dar muita atenção a ele. Porém, assim que ele saiu da minha sala, eu encontrei os dados que ele precisava no site da Justiça Eleitoral.&lt;/p&gt;
&lt;p&gt;Infelizmente ele não deixou nome, telefone ou algo que eu pudesse entrar em contato.&lt;/p&gt;
&lt;h1&gt;Onde estão os dados&lt;/h1&gt;
&lt;p&gt;Os dados das eleições municipais podem ser encontradas &lt;a href="https://www.tre-pr.jus.br/eleicoes/resultados/resultados-de-eleicoes-municipais-tre-pr"&gt;nesta página&lt;/a&gt; do Tribunal Regional Eleitoral do Paraná. Existe um formulário para selecionar o Município e o ano de interesse.&lt;/p&gt;
&lt;p&gt;Eu já baixei os dados em &lt;span class="caps"&gt;PDF&lt;/span&gt; do Município de Santo Antônio da Platina, que podem ser encontrados &lt;a href="https://drive.google.com/drive/folders/1oIY3ox24z55VbDUlERW2vCjakbYKBNHU?usp=sharing"&gt;nessa pasta do Google Drive&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A Câmara Municipal também mantém uma arquivo com a lista dos Prefeitos e da composição da Câmara ao longo dos anos. Esses arquivos estão disponíveis no site da entidade e na pasta do drive.&lt;/p&gt;
&lt;h1&gt;Próximos passos&lt;/h1&gt;
&lt;p&gt;Apesar de achar esses dados interessantes, atualmente me falta tempo para organizar esses dados em uma tabela e realizar alguma análise.&lt;/p&gt;
&lt;p&gt;Talvez, se aquele menino, estudante do mestrado em Geografia, novamente aparecer e mostrar as suas conclusões seria algo bem interessante.&lt;/p&gt;</content><category term="data-analysis"></category><category term="datasets"></category></entry><entry><title>Lendo dados no formato JSON com pandas</title><link href="https://giliardgodoi.github.io/articles/2022/ler-json-com-pandas-dataframe/" rel="alternate"></link><published>2022-08-15T00:00:00-03:00</published><updated>2022-08-15T00:00:00-03:00</updated><author><name>Giliard Godoi</name></author><id>tag:giliardgodoi.github.io,2022-08-15:/articles/2022/ler-json-com-pandas-dataframe/</id><summary type="html">&lt;p&gt;Conheça funções úteis da biblioteca pandas para trabalhar com dados no formato &lt;span class="caps"&gt;JSON&lt;/span&gt;&lt;/p&gt;</summary><content type="html">&lt;h2&gt;O que é &lt;span class="caps"&gt;JSON&lt;/span&gt;?&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;JavaScript Object Notation&lt;/em&gt; (&lt;span class="caps"&gt;JSON&lt;/span&gt;) é uma representação de dados baseado em chave-valor, seguindo a sintaxe dos objetos da linguagem JavaScript.
Popularizou-se como uma forma de transmissão de dados pela Web, como uma alternativa à estrutura &lt;span class="caps"&gt;XML&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Outras linguagens também oferecem suporte para se trabalhar com dados nesse formato. Por exemplo, a biblioteca nativa &lt;a href="https://docs.python.org/3/library/json.html"&gt;&lt;code&gt;json&lt;/code&gt;&lt;/a&gt; permite converter strings no formato &lt;span class="caps"&gt;JSON&lt;/span&gt; para dicionários da linguagem Python.&lt;/p&gt;
&lt;p&gt;Para que essa conversão seja possível, é necessário estabelecer uma relação entre os tipos primitivos dessas duas linguagens. Essa correspondência é bastante simples pois ambas as linguagem oferecem um tipo primitivo para strings (texto), valores numéricos (inteiros e floats), tipos booleanos (True, False) e listas, dicionários e o valor nulo (Null no caso do JavaScript e None no caso do Python).&lt;/p&gt;
&lt;p&gt;Nesse artigo, veremos como transformar dados em &lt;span class="caps"&gt;JSON&lt;/span&gt; em dataframes em quatro exemplos.
- Um exemplo básico;
- Um exemplo intermediário
- Um exemplo avançado;
- E um exemplo um pouco mais avançado.&lt;/p&gt;
&lt;p&gt;O exemplo de dados no formato &lt;span class="caps"&gt;JSON&lt;/span&gt; utilizado nesse artigo é adaptado daquele presente na página de documentação da &lt;a href="https://developer.mozilla.org/pt-BR/docs/Learn/JavaScript/Objects/JSON"&gt;Mozilla Web Docs&lt;/a&gt;, e que pode ser consultado nesse link.&lt;/p&gt;
&lt;h2&gt;Exemplo básico&lt;/h2&gt;
&lt;p&gt;Nesse primeiro exemplo, transformaremos a string no formato &lt;span class="caps"&gt;JSON&lt;/span&gt; em um dicionário em Python utilizando a biblioteca nativa &lt;code&gt;json&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A variável &lt;code&gt;single_character&lt;/code&gt; é string com um único objeto no formato &lt;span class="caps"&gt;JSON&lt;/span&gt;. Esse objeto temos as chaves &lt;code&gt;'name'&lt;/code&gt;, &lt;code&gt;'age'&lt;/code&gt;, &lt;code&gt;'secretIdentity'&lt;/code&gt; e &lt;code&gt;'powers'&lt;/code&gt;, e seus respectivos valores.&lt;/p&gt;
&lt;p&gt;Note que o valor correspondente a chave &lt;code&gt;powers&lt;/code&gt; é uma lista de strings. O uso de listas (ou &lt;em&gt;arrays&lt;/em&gt; do JavaScript) codifica uma relação de um-para-muitos. No caso, um super-heroí possui vários poderes.&lt;/p&gt;
&lt;p&gt;Podemos transformar (ou decodificar) esses dados em um dicionário Python utilizando a função &lt;code&gt;json.loads&lt;/code&gt;. E magicamente, temos um dicionário.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;

&lt;span class="n"&gt;single_character&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'''&lt;/span&gt;
&lt;span class="s1"&gt;{&lt;/span&gt;
&lt;span class="s1"&gt;      "name": "Molecule Man",&lt;/span&gt;
&lt;span class="s1"&gt;      "age": 29,&lt;/span&gt;
&lt;span class="s1"&gt;      "secretIdentity": "Dan Jukes",&lt;/span&gt;
&lt;span class="s1"&gt;      "powers": [&lt;/span&gt;
&lt;span class="s1"&gt;        "Radiation resistance",&lt;/span&gt;
&lt;span class="s1"&gt;        "Turning tiny",&lt;/span&gt;
&lt;span class="s1"&gt;        "Radiation blast"&lt;/span&gt;
&lt;span class="s1"&gt;      ]&lt;/span&gt;
&lt;span class="s1"&gt;    }&lt;/span&gt;
&lt;span class="s1"&gt;'''&lt;/span&gt;

&lt;span class="n"&gt;superhero&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;single_character&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;superhero&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'Molecule Man'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;'age'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;'secretIdentity'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'Dan Jukes'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;'powers'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Radiation resistance'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Turning tiny'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Radiation blast'&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Um pandas Dataframe pode ser construído a partir de uma lista de dicionários. Mas se passarmos esse simples dicionário &lt;code&gt;superhero&lt;/code&gt; para o construtor do dataframe, também obtemos um dataframe.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;superhero&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="table-responsive"&gt;
&lt;table border="0" class="table text-center dataframe table-striped table-hover"&gt;
&lt;thead class="table-secondary"&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;age&lt;/th&gt;
&lt;th&gt;secretIdentity&lt;/th&gt;
&lt;th&gt;powers&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;td&gt;Molecule Man&lt;/td&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;Dan Jukes&lt;/td&gt;
&lt;td&gt;Radiation resistance&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;td&gt;Molecule Man&lt;/td&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;Dan Jukes&lt;/td&gt;
&lt;td&gt;Turning tiny&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;td&gt;Molecule Man&lt;/td&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;Dan Jukes&lt;/td&gt;
&lt;td&gt;Radiation blast&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Note que o atributo &lt;code&gt;powers&lt;/code&gt;, que codifica uma lista de três poderes, e ele se desdobra em três registros (linhas).&lt;/p&gt;
&lt;p&gt;Porém, esse mesmo resultado pode ser obtido utilizando a função &lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_json.html"&gt;&lt;code&gt;pd.read_json&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;single_character&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="table-responsive"&gt;
&lt;table border="0" class="table text-center dataframe table-striped table-hover"&gt;
&lt;thead class="table-secondary"&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;age&lt;/th&gt;
&lt;th&gt;secretIdentity&lt;/th&gt;
&lt;th&gt;powers&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;td&gt;Molecule Man&lt;/td&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;Dan Jukes&lt;/td&gt;
&lt;td&gt;Radiation resistance&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;td&gt;Molecule Man&lt;/td&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;Dan Jukes&lt;/td&gt;
&lt;td&gt;Turning tiny&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;td&gt;Molecule Man&lt;/td&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;Dan Jukes&lt;/td&gt;
&lt;td&gt;Radiation blast&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h2&gt;Exemplo Intermediário&lt;/h2&gt;
&lt;p&gt;Nesse próximo exemplo, a variável &lt;code&gt;squad&lt;/code&gt; é uma lista de heróis, e ainda temos o mesmo atributo &lt;code&gt;powers&lt;/code&gt; com uma lista de poderes para esses heróis.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;squad&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'''&lt;/span&gt;
&lt;span class="s1"&gt; [&lt;/span&gt;
&lt;span class="s1"&gt;    {&lt;/span&gt;
&lt;span class="s1"&gt;      "name": "Molecule Man",&lt;/span&gt;
&lt;span class="s1"&gt;      "age": 29,&lt;/span&gt;
&lt;span class="s1"&gt;      "secretIdentity": "Dan Jukes",&lt;/span&gt;
&lt;span class="s1"&gt;      "powers": [&lt;/span&gt;
&lt;span class="s1"&gt;        "Radiation resistance",&lt;/span&gt;
&lt;span class="s1"&gt;        "Turning tiny",&lt;/span&gt;
&lt;span class="s1"&gt;        "Radiation blast"&lt;/span&gt;
&lt;span class="s1"&gt;      ]&lt;/span&gt;
&lt;span class="s1"&gt;    },&lt;/span&gt;
&lt;span class="s1"&gt;    {&lt;/span&gt;
&lt;span class="s1"&gt;      "name": "Madame Uppercut",&lt;/span&gt;
&lt;span class="s1"&gt;      "age": 39,&lt;/span&gt;
&lt;span class="s1"&gt;      "secretIdentity": "Jane Wilson",&lt;/span&gt;
&lt;span class="s1"&gt;      "powers": [&lt;/span&gt;
&lt;span class="s1"&gt;        "Million tonne punch",&lt;/span&gt;
&lt;span class="s1"&gt;        "Damage resistance",&lt;/span&gt;
&lt;span class="s1"&gt;        "Superhuman reflexes"&lt;/span&gt;
&lt;span class="s1"&gt;      ]&lt;/span&gt;
&lt;span class="s1"&gt;    },&lt;/span&gt;
&lt;span class="s1"&gt;    {&lt;/span&gt;
&lt;span class="s1"&gt;      "name": "Eternal Flame",&lt;/span&gt;
&lt;span class="s1"&gt;      "age": 1000000,&lt;/span&gt;
&lt;span class="s1"&gt;      "secretIdentity": "Unknown",&lt;/span&gt;
&lt;span class="s1"&gt;      "powers": [&lt;/span&gt;
&lt;span class="s1"&gt;        "Immortality",&lt;/span&gt;
&lt;span class="s1"&gt;        "Heat Immunity",&lt;/span&gt;
&lt;span class="s1"&gt;        "Inferno",&lt;/span&gt;
&lt;span class="s1"&gt;        "Teleportation",&lt;/span&gt;
&lt;span class="s1"&gt;        "Interdimensional travel"&lt;/span&gt;
&lt;span class="s1"&gt;      ]&lt;/span&gt;
&lt;span class="s1"&gt;    }&lt;/span&gt;
&lt;span class="s1"&gt;  ]&lt;/span&gt;
&lt;span class="s1"&gt;'''&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nesse caso função &lt;code&gt;pd.read_json&lt;/code&gt; não desdobra os valores da coluna &lt;code&gt;powers&lt;/code&gt;. Os valores dessa coluna são diversas listas.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;squad&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="table-responsive"&gt;
&lt;table border="0" class="table text-center dataframe table-striped table-hover"&gt;
&lt;thead class="table-secondary"&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;age&lt;/th&gt;
&lt;th&gt;secretIdentity&lt;/th&gt;
&lt;th&gt;powers&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;td&gt;Molecule Man&lt;/td&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;Dan Jukes&lt;/td&gt;
&lt;td&gt;[Radiation resistance, Turning tiny, Radiation…&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;td&gt;Madame Uppercut&lt;/td&gt;
&lt;td&gt;39&lt;/td&gt;
&lt;td&gt;Jane Wilson&lt;/td&gt;
&lt;td&gt;[Million tonne punch, Damage resistance, Super…&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;td&gt;Eternal Flame&lt;/td&gt;
&lt;td&gt;1000000&lt;/td&gt;
&lt;td&gt;Unknown&lt;/td&gt;
&lt;td&gt;[Immortality, Heat Immunity, Inferno, Teleport…&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Caso se queira desdobrar esse relacionamento um-para-vários, é possível utilizar o método &lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.explode.html"&gt;&lt;code&gt;explode&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;squad&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;explode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'powers'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="table-responsive"&gt;
&lt;table border="0" class="table text-center dataframe table-striped table-hover"&gt;
&lt;thead class="table-secondary"&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;age&lt;/th&gt;
&lt;th&gt;secretIdentity&lt;/th&gt;
&lt;th&gt;powers&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;td&gt;Molecule Man&lt;/td&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;Dan Jukes&lt;/td&gt;
&lt;td&gt;Radiation resistance&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;td&gt;Molecule Man&lt;/td&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;Dan Jukes&lt;/td&gt;
&lt;td&gt;Turning tiny&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;td&gt;Molecule Man&lt;/td&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;Dan Jukes&lt;/td&gt;
&lt;td&gt;Radiation blast&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;td&gt;Madame Uppercut&lt;/td&gt;
&lt;td&gt;39&lt;/td&gt;
&lt;td&gt;Jane Wilson&lt;/td&gt;
&lt;td&gt;Million tonne punch&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;td&gt;Madame Uppercut&lt;/td&gt;
&lt;td&gt;39&lt;/td&gt;
&lt;td&gt;Jane Wilson&lt;/td&gt;
&lt;td&gt;Damage resistance&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;td&gt;Madame Uppercut&lt;/td&gt;
&lt;td&gt;39&lt;/td&gt;
&lt;td&gt;Jane Wilson&lt;/td&gt;
&lt;td&gt;Superhuman reflexes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;td&gt;Eternal Flame&lt;/td&gt;
&lt;td&gt;1000000&lt;/td&gt;
&lt;td&gt;Unknown&lt;/td&gt;
&lt;td&gt;Immortality&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;td&gt;Eternal Flame&lt;/td&gt;
&lt;td&gt;1000000&lt;/td&gt;
&lt;td&gt;Unknown&lt;/td&gt;
&lt;td&gt;Heat Immunity&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;td&gt;Eternal Flame&lt;/td&gt;
&lt;td&gt;1000000&lt;/td&gt;
&lt;td&gt;Unknown&lt;/td&gt;
&lt;td&gt;Inferno&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;td&gt;Eternal Flame&lt;/td&gt;
&lt;td&gt;1000000&lt;/td&gt;
&lt;td&gt;Unknown&lt;/td&gt;
&lt;td&gt;Teleportation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;td&gt;Eternal Flame&lt;/td&gt;
&lt;td&gt;1000000&lt;/td&gt;
&lt;td&gt;Unknown&lt;/td&gt;
&lt;td&gt;Interdimensional travel&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h2&gt;Exemplo Avançado&lt;/h2&gt;
&lt;p&gt;No próximo exemplo, os temos as informações do esquadrão de super-heróis: nomes, cidade, ano de formação, base secreta, além da relação de membros.&lt;/p&gt;
&lt;p&gt;Novamente temos uma relação de um-para-muitos: um esquadrão e vários super-heróis. Nesse exemplo, vamos omitir a relação um-para-muitos entre heróis e poderes.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;squad_advanced&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'''{&lt;/span&gt;
&lt;span class="s1"&gt;  "squadName": "Super hero squad",&lt;/span&gt;
&lt;span class="s1"&gt;  "homeTown": "Metro City",&lt;/span&gt;
&lt;span class="s1"&gt;  "formed": 2016,&lt;/span&gt;
&lt;span class="s1"&gt;  "secretBase": "Super tower",&lt;/span&gt;
&lt;span class="s1"&gt;  "active": true,&lt;/span&gt;
&lt;span class="s1"&gt;  "members": [&lt;/span&gt;
&lt;span class="s1"&gt;    {&lt;/span&gt;
&lt;span class="s1"&gt;      "name": "Molecule Man",&lt;/span&gt;
&lt;span class="s1"&gt;      "age": 29,&lt;/span&gt;
&lt;span class="s1"&gt;      "secretIdentity": "Dan Jukes",&lt;/span&gt;
&lt;span class="s1"&gt;      "powers" : "molecule powers"&lt;/span&gt;
&lt;span class="s1"&gt;    },&lt;/span&gt;
&lt;span class="s1"&gt;    {&lt;/span&gt;
&lt;span class="s1"&gt;      "name": "Madame Uppercut",&lt;/span&gt;
&lt;span class="s1"&gt;      "age": 39,&lt;/span&gt;
&lt;span class="s1"&gt;      "secretIdentity": "Jane Wilson",&lt;/span&gt;
&lt;span class="s1"&gt;      "powers" : "badass"&lt;/span&gt;
&lt;span class="s1"&gt;    },&lt;/span&gt;
&lt;span class="s1"&gt;    {&lt;/span&gt;
&lt;span class="s1"&gt;      "name": "Eternal Flame",&lt;/span&gt;
&lt;span class="s1"&gt;      "age": 1000000,&lt;/span&gt;
&lt;span class="s1"&gt;      "secretIdentity": "Unknown",&lt;/span&gt;
&lt;span class="s1"&gt;      "powers" : "flame"&lt;/span&gt;
&lt;span class="s1"&gt;    }&lt;/span&gt;
&lt;span class="s1"&gt;  ]&lt;/span&gt;
&lt;span class="s1"&gt;}&lt;/span&gt;
&lt;span class="s1"&gt;'''&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O dataframe resultante da função &lt;code&gt;pd.read_json&lt;/code&gt; possui os atributos do esquadrão nome, cidade, ano de formação, base secreta e se está ou não em atividade.&lt;/p&gt;
&lt;p&gt;Os valores da coluna &lt;code&gt;members&lt;/code&gt; no entanto, são dicionários correspondentes aos super-heróis.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;squad_advanced&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="table-responsive"&gt;
&lt;table border="0" class="table text-center dataframe table-striped table-hover"&gt;
&lt;thead class="table-secondary"&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;squadName&lt;/th&gt;
&lt;th&gt;homeTown&lt;/th&gt;
&lt;th&gt;formed&lt;/th&gt;
&lt;th&gt;secretBase&lt;/th&gt;
&lt;th&gt;active&lt;/th&gt;
&lt;th&gt;members&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;2016&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;{‘name’: ‘Molecule Man’, ‘age’: 29, ‘secretIde…&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;2016&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;{‘name’: ‘Madame Uppercut’, ‘age’: 39, ‘secret…&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;2016&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;{‘name’: ‘Eternal Flame’, ‘age’: 1000000, ‘sec…&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Ao utilizar o método &lt;code&gt;explode&lt;/code&gt; para desdobrar essa relação os valores da coluna &lt;code&gt;members&lt;/code&gt; corresponderá às chaves dos dicionários.&lt;/p&gt;
&lt;p&gt;Muito provavelmente, esse não é o resultado esperado para as nossas análises, conforme podemos ver.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;squad_advanced&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;explode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'members'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="table-responsive"&gt;
&lt;table border="0" class="table text-center dataframe table-striped table-hover"&gt;
&lt;thead class="table-secondary"&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;squadName&lt;/th&gt;
&lt;th&gt;homeTown&lt;/th&gt;
&lt;th&gt;formed&lt;/th&gt;
&lt;th&gt;secretBase&lt;/th&gt;
&lt;th&gt;active&lt;/th&gt;
&lt;th&gt;members&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;2016&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;2016&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;age&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;2016&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;secretIdentity&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;2016&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;powers&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;2016&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;2016&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;age&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;2016&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;secretIdentity&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;2016&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;powers&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;2016&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;2016&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;age&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;2016&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;secretIdentity&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;2016&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;powers&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Nesses casos podemos utilizar a função &lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.json_normalize.html"&gt;&lt;code&gt;pd.json_normalize&lt;/code&gt;&lt;/a&gt; para obter melhores resultados.&lt;/p&gt;
&lt;p&gt;Contudo, essa função aceita dicionários Python, por isso é necessário utilizar a função &lt;code&gt;json.loads&lt;/code&gt; para decodificar os dados &lt;span class="caps"&gt;JSON&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Essa função recebe o parâmetro &lt;code&gt;record_paths&lt;/code&gt; que indica qual é o atributo principal dos dados, nesse caso o atributo &lt;code&gt;members&lt;/code&gt; com informações dos nossos três super-heróis.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;squad_dict&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;squad_advanced&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json_normalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;squad_dict&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;record_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'members'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="table-responsive"&gt;
&lt;table border="0" class="table text-center dataframe table-striped table-hover"&gt;
&lt;thead class="table-secondary"&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;age&lt;/th&gt;
&lt;th&gt;secretIdentity&lt;/th&gt;
&lt;th&gt;powers&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;td&gt;Molecule Man&lt;/td&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;Dan Jukes&lt;/td&gt;
&lt;td&gt;molecule powers&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;td&gt;Madame Uppercut&lt;/td&gt;
&lt;td&gt;39&lt;/td&gt;
&lt;td&gt;Jane Wilson&lt;/td&gt;
&lt;td&gt;badass&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;td&gt;Eternal Flame&lt;/td&gt;
&lt;td&gt;1000000&lt;/td&gt;
&lt;td&gt;Unknown&lt;/td&gt;
&lt;td&gt;flame&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Para manter os atributos que se refere às informações do esquadrão, utilizamos os parâmetros &lt;code&gt;meta&lt;/code&gt; e passamos a lista de atributos que queremos manter.&lt;/p&gt;
&lt;p&gt;Note que os valores desses atributos são repetidos para cada um dos três super-heróis.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json_normalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;squad_dict&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="n"&gt;record_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'members'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="n"&gt;meta&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'squadName'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'homeTown'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'secretBase'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="table-responsive"&gt;
&lt;table border="0" class="table text-center dataframe table-striped table-hover"&gt;
&lt;thead class="table-secondary"&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;age&lt;/th&gt;
&lt;th&gt;secretIdentity&lt;/th&gt;
&lt;th&gt;powers&lt;/th&gt;
&lt;th&gt;squadName&lt;/th&gt;
&lt;th&gt;homeTown&lt;/th&gt;
&lt;th&gt;secretBase&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;td&gt;Molecule Man&lt;/td&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;Dan Jukes&lt;/td&gt;
&lt;td&gt;molecule powers&lt;/td&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;td&gt;Madame Uppercut&lt;/td&gt;
&lt;td&gt;39&lt;/td&gt;
&lt;td&gt;Jane Wilson&lt;/td&gt;
&lt;td&gt;badass&lt;/td&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;td&gt;Eternal Flame&lt;/td&gt;
&lt;td&gt;1000000&lt;/td&gt;
&lt;td&gt;Unknown&lt;/td&gt;
&lt;td&gt;flame&lt;/td&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h2&gt;Um exemplo um pouco mais avançado&lt;/h2&gt;
&lt;p&gt;Nesse último caso, vamos unir o que aprendemos nos dois últimos exemplos. Para tanto, voltamos com a relação um-para-vários presente no atributo &lt;code&gt;powers&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;squad_more_advanced&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'''&lt;/span&gt;
&lt;span class="s1"&gt;{&lt;/span&gt;
&lt;span class="s1"&gt;  "squadName": "Super hero squad",&lt;/span&gt;
&lt;span class="s1"&gt;  "homeTown": "Metro City",&lt;/span&gt;
&lt;span class="s1"&gt;  "formed": 2016,&lt;/span&gt;
&lt;span class="s1"&gt;  "secretBase": "Super tower",&lt;/span&gt;
&lt;span class="s1"&gt;  "active": true,&lt;/span&gt;
&lt;span class="s1"&gt;  "members": [&lt;/span&gt;
&lt;span class="s1"&gt;    {&lt;/span&gt;
&lt;span class="s1"&gt;      "name": "Molecule Man",&lt;/span&gt;
&lt;span class="s1"&gt;      "age": 29,&lt;/span&gt;
&lt;span class="s1"&gt;      "secretIdentity": "Dan Jukes",&lt;/span&gt;
&lt;span class="s1"&gt;      "powers": [&lt;/span&gt;
&lt;span class="s1"&gt;        "Radiation resistance",&lt;/span&gt;
&lt;span class="s1"&gt;        "Turning tiny",&lt;/span&gt;
&lt;span class="s1"&gt;        "Radiation blast"&lt;/span&gt;
&lt;span class="s1"&gt;      ]&lt;/span&gt;
&lt;span class="s1"&gt;    },&lt;/span&gt;
&lt;span class="s1"&gt;    {&lt;/span&gt;
&lt;span class="s1"&gt;      "name": "Madame Uppercut",&lt;/span&gt;
&lt;span class="s1"&gt;      "age": 39,&lt;/span&gt;
&lt;span class="s1"&gt;      "secretIdentity": "Jane Wilson",&lt;/span&gt;
&lt;span class="s1"&gt;      "powers": [&lt;/span&gt;
&lt;span class="s1"&gt;        "Million tonne punch",&lt;/span&gt;
&lt;span class="s1"&gt;        "Damage resistance",&lt;/span&gt;
&lt;span class="s1"&gt;        "Superhuman reflexes"&lt;/span&gt;
&lt;span class="s1"&gt;      ]&lt;/span&gt;
&lt;span class="s1"&gt;    },&lt;/span&gt;
&lt;span class="s1"&gt;    {&lt;/span&gt;
&lt;span class="s1"&gt;      "name": "Eternal Flame",&lt;/span&gt;
&lt;span class="s1"&gt;      "age": 1000000,&lt;/span&gt;
&lt;span class="s1"&gt;      "secretIdentity": "Unknown",&lt;/span&gt;
&lt;span class="s1"&gt;      "powers": [&lt;/span&gt;
&lt;span class="s1"&gt;        "Immortality",&lt;/span&gt;
&lt;span class="s1"&gt;        "Heat Immunity",&lt;/span&gt;
&lt;span class="s1"&gt;        "Inferno",&lt;/span&gt;
&lt;span class="s1"&gt;        "Teleportation",&lt;/span&gt;
&lt;span class="s1"&gt;        "Interdimensional travel"&lt;/span&gt;
&lt;span class="s1"&gt;      ]&lt;/span&gt;
&lt;span class="s1"&gt;    }&lt;/span&gt;
&lt;span class="s1"&gt;  ]&lt;/span&gt;
&lt;span class="s1"&gt;}&lt;/span&gt;
&lt;span class="s1"&gt;'''&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Então, seguimos os mesmos passos:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Decodificamos os dados em &lt;span class="caps"&gt;JSON&lt;/span&gt; em dicionários;&lt;/li&gt;
&lt;li&gt;Utilizamos a função &lt;code&gt;pd.json_normalize&lt;/code&gt; definindo os parâmetros &lt;code&gt;record_paths&lt;/code&gt; para chave que contém os nossos principais dados, e &lt;code&gt;meta&lt;/code&gt; para aquelas chaves que queremos manter;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;squad_dict_2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;squad_more_advanced&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json_normalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;squad_dict_2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="n"&gt;record_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'members'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="n"&gt;meta&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'squadName'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'homeTown'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'secretBase'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="table-responsive"&gt;
&lt;table border="0" class="table text-center dataframe table-striped table-hover"&gt;
&lt;thead class="table-secondary"&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;age&lt;/th&gt;
&lt;th&gt;secretIdentity&lt;/th&gt;
&lt;th&gt;powers&lt;/th&gt;
&lt;th&gt;squadName&lt;/th&gt;
&lt;th&gt;homeTown&lt;/th&gt;
&lt;th&gt;secretBase&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;td&gt;Molecule Man&lt;/td&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;Dan Jukes&lt;/td&gt;
&lt;td&gt;[Radiation resistance, Turning tiny, Radiation…&lt;/td&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;td&gt;Madame Uppercut&lt;/td&gt;
&lt;td&gt;39&lt;/td&gt;
&lt;td&gt;Jane Wilson&lt;/td&gt;
&lt;td&gt;[Million tonne punch, Damage resistance, Super…&lt;/td&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;td&gt;Eternal Flame&lt;/td&gt;
&lt;td&gt;1000000&lt;/td&gt;
&lt;td&gt;Unknown&lt;/td&gt;
&lt;td&gt;[Immortality, Heat Immunity, Inferno, Teleport…&lt;/td&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;A coluna que corresponde a chave &lt;code&gt;powers&lt;/code&gt;, que mantém informações sobre os poderes dos super-heróis, mantém listas com nomes dos poderes de cada super-herói.&lt;/p&gt;
&lt;p&gt;Poderíamos desdobrar os valores dessa coluna utilizando o método &lt;code&gt;explode&lt;/code&gt;, conforme pode-se ver a seguir.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;explode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'powers'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="table-responsive"&gt;
&lt;table border="0" class="table text-center dataframe table-striped table-hover"&gt;
&lt;thead class="table-secondary"&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;age&lt;/th&gt;
&lt;th&gt;secretIdentity&lt;/th&gt;
&lt;th&gt;powers&lt;/th&gt;
&lt;th&gt;squadName&lt;/th&gt;
&lt;th&gt;homeTown&lt;/th&gt;
&lt;th&gt;secretBase&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;td&gt;Molecule Man&lt;/td&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;Dan Jukes&lt;/td&gt;
&lt;td&gt;Radiation resistance&lt;/td&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;td&gt;Molecule Man&lt;/td&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;Dan Jukes&lt;/td&gt;
&lt;td&gt;Turning tiny&lt;/td&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;td&gt;Molecule Man&lt;/td&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;Dan Jukes&lt;/td&gt;
&lt;td&gt;Radiation blast&lt;/td&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;td&gt;Madame Uppercut&lt;/td&gt;
&lt;td&gt;39&lt;/td&gt;
&lt;td&gt;Jane Wilson&lt;/td&gt;
&lt;td&gt;Million tonne punch&lt;/td&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;td&gt;Madame Uppercut&lt;/td&gt;
&lt;td&gt;39&lt;/td&gt;
&lt;td&gt;Jane Wilson&lt;/td&gt;
&lt;td&gt;Damage resistance&lt;/td&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;td&gt;Madame Uppercut&lt;/td&gt;
&lt;td&gt;39&lt;/td&gt;
&lt;td&gt;Jane Wilson&lt;/td&gt;
&lt;td&gt;Superhuman reflexes&lt;/td&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;td&gt;Eternal Flame&lt;/td&gt;
&lt;td&gt;1000000&lt;/td&gt;
&lt;td&gt;Unknown&lt;/td&gt;
&lt;td&gt;Immortality&lt;/td&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;td&gt;Eternal Flame&lt;/td&gt;
&lt;td&gt;1000000&lt;/td&gt;
&lt;td&gt;Unknown&lt;/td&gt;
&lt;td&gt;Heat Immunity&lt;/td&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;td&gt;Eternal Flame&lt;/td&gt;
&lt;td&gt;1000000&lt;/td&gt;
&lt;td&gt;Unknown&lt;/td&gt;
&lt;td&gt;Inferno&lt;/td&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;td&gt;Eternal Flame&lt;/td&gt;
&lt;td&gt;1000000&lt;/td&gt;
&lt;td&gt;Unknown&lt;/td&gt;
&lt;td&gt;Teleportation&lt;/td&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;td&gt;Eternal Flame&lt;/td&gt;
&lt;td&gt;1000000&lt;/td&gt;
&lt;td&gt;Unknown&lt;/td&gt;
&lt;td&gt;Interdimensional travel&lt;/td&gt;
&lt;td&gt;Super hero squad&lt;/td&gt;
&lt;td&gt;Metro City&lt;/td&gt;
&lt;td&gt;Super tower&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h2&gt;Conclusão&lt;/h2&gt;
&lt;p&gt;&lt;span class="caps"&gt;JSON&lt;/span&gt; permite estruturar dados nos mais diferentes formatos. Atributos podem manter listas de valores, ou até mesmo lista de dicionários. As possibilidades são numerosas.&lt;/p&gt;
&lt;p&gt;Nesse artigo, comentamos sobre o uso de algumas funções e métodos para transformados dados no formato &lt;span class="caps"&gt;JSON&lt;/span&gt; em dataframes, sendo elas:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/library/json.html"&gt;&lt;code&gt;json.loads&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_json.html"&gt;&lt;code&gt;pd.read_json&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.explode.html"&gt;&lt;code&gt;dataframe.explode&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.json_normalize.html"&gt;&lt;code&gt;pd.json_normalize&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="data-analysis"></category><category term="python"></category><category term="pandas"></category><category term="json"></category></entry><entry><title>Transformando pandas dataframes com wide_to_long</title><link href="https://giliardgodoi.github.io/articles/2022/transformando-dataframe-com-wide-to-long/" rel="alternate"></link><published>2022-07-26T00:00:00-03:00</published><updated>2022-07-26T00:00:00-03:00</updated><author><name>Giliard Godoi</name></author><id>tag:giliardgodoi.github.io,2022-07-26:/articles/2022/transformando-dataframe-com-wide-to-long/</id><summary type="html">&lt;p&gt;Quando os nomes das colunas guardam informações que podem ser&amp;nbsp;importantes&lt;/p&gt;</summary><content type="html">&lt;h2&gt;&lt;span class="caps"&gt;TL&lt;/span&gt;;&lt;span class="caps"&gt;DR&lt;/span&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Formato wide table&lt;/li&gt;
&lt;li&gt;Formato long table&lt;/li&gt;
&lt;li&gt;Para que serve a função &lt;code&gt;pd.wide_to_long&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Parâmetros da função&lt;/li&gt;
&lt;li&gt;Exemplos&lt;/li&gt;
&lt;li&gt;Outros métodos e funções relacionados.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Documentação: &lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.wide_to_long.html"&gt;&lt;code&gt;pd.wide_to_long&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Exemplos mencionados no artigo também estão disponíveis no Google Collab.&lt;/p&gt;
&lt;h2&gt;Introdução&lt;/h2&gt;
&lt;p&gt;Este artigo discute a utilização da função &lt;code&gt;pd.wide_to_long&lt;/code&gt; da biblioteca &lt;a href="https://pandas.pydata.org/"&gt;Pandas&lt;/a&gt;.
“Wide tables” e “long tables” referem-se a como os dados estão organizados nas tabelas. Não sei se existe uma tradução melhor, mas eu vou adotar os conceitos de tabela no formato amplo (wide) e tabela no formato longo (long).&lt;/p&gt;
&lt;h2&gt;Formato wide table (Formato amplo?)&lt;/h2&gt;
&lt;p&gt;A organização da tabela no formato amplo é, possivelmente, o que mais naturalmente vem a mente quando pensamos em tabelas.&lt;/p&gt;
&lt;p&gt;Esse formato possui as seguintes características:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cada linha corresponde a uma observação de um fenômeno (dados de uma pessoa, de uma transação bancária, etc.)&lt;/li&gt;
&lt;li&gt;Cada coluna guarda o valor de um respectivo atributo dessa observação. Por exemplo, no caso de uma pessoa, poderíamos ter uma coluna para a altura, outra para o peso, outra para a data de nascimento.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Formato long table&lt;/h2&gt;
&lt;p&gt;Já no formato longo os atributos de uma observação (isto é, o que seria as colunas) estão organizados como registros de uma tabela, isto é, distribuídos pelas linhas da tabela.
Um exemplo básico seria esse:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Imagem com exemplo de tabelas no formato longo e amplo" class="mx-auto d-block img-fluid" src="./long-wide-table-example.jpg"/&gt;&lt;/p&gt;
&lt;h2&gt;Mas para que serve a função &lt;code&gt;pd.wide_to_long&lt;/code&gt;?&lt;/h2&gt;
&lt;p&gt;O próximo exemplo é baseado em um exemplo existente na documentação, mas eu inventei um contexto a mais para esses dados.&lt;/p&gt;
&lt;p&gt;No mundo real, e pelas mais diferentes razões, os dados podem estar organizados nas mais variadas formas.&lt;/p&gt;
&lt;p&gt;Imagine por exemplo, que por alguma razão, os nomes das colunas de uma tabela codificam uma informação importante, e queiramos utilizar essa informação como valores na nossa tabela.&lt;/p&gt;
&lt;p&gt;Por exemplo, imagine a seguinte tabela com informações sobre a quantidade de vendas de dois produtos ‘A’ e ‘B’, durante cinco semanas dos anos de 2020 e 2021.&lt;/p&gt;
&lt;p&gt;Os dados estão organizados na tabela com as seguintes colunas:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;'A(weekly)-2020', 'A(weekly)-2021', 'B(weekly)-2020', 'B(weekly)-2021', 'week'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As colunas com informações do produto seguem o seguinte padrão: A ou B para identificar o produto seguido da expressão (weekly); um carácter de separação ‘-’; mais o valor que representa o ano (2020 ou 2021).&lt;/p&gt;
&lt;p&gt;Os nomes das colunas podem ser divididos em duas partes que, para seguir a nomeação dada pela documentação, chamaremos de prefixo e sufixo.&lt;/p&gt;
&lt;p&gt;Os prefixos seriam as expressões ‘A(weekly)’ e ‘B(weekly)’ que codificam a informação do tipo do produto.&lt;/p&gt;
&lt;p&gt;Já os sufixos seriam os valores para os anos: 2020 e 2021.&lt;/p&gt;
&lt;p&gt;Então, antes de seguir a leitura, note que identificamos nos nomes das colunas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Um prefixo: ‘A(weekly)’ e ‘B(weekly)’&lt;/li&gt;
&lt;li&gt;Um carácter de separação: ‘-’&lt;/li&gt;
&lt;li&gt;Um sufixo: os valores&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Parâmetros da função&lt;/h2&gt;
&lt;p&gt;De acordo com a documentação, a função &lt;code&gt;pd.wide_to_long&lt;/code&gt; possui os seguintes parâmetros:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;df é o dataframe a ser transformado.&lt;/li&gt;
&lt;li&gt;stubnames (str ou uma lista) indica os valores dos prefixos presentes nos nomes das colunas, que serão utilizados para transformar o dataframe. Uma definição da palavra &lt;em&gt;stub&lt;/em&gt; pode ser encontrada no &lt;a href="https://dictionary.cambridge.org/dictionary/english/stub"&gt;dicionário Cambridge&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;i (str ou uma lista) indica as colunas que serão utilizadas com identificadores (id) das observações, essas colunas serão transformadas em índices do dataframe retornado.&lt;/li&gt;
&lt;li&gt;j (str) : indica o nome da coluna que será criada com os valores identificados pelos sufixos&lt;/li&gt;
&lt;li&gt;sep : indica o caractere de separação entre os prefixos e os sufixos dos nomes das colunas.&lt;/li&gt;
&lt;li&gt;suffix: aceita uma expressão regular que será utilizada para a identificação dos sufixos;&lt;/li&gt;
&lt;li&gt;O valor padrão é &lt;code&gt;\d+&lt;/code&gt; que captura valores numéricos.&lt;/li&gt;
&lt;li&gt;Esse parâmetro pode ser alterado para &lt;code&gt;\w+&lt;/code&gt; que captura strings&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Particularmente, eu tenho a impressão que a biblioteca pandas poderia ser muito mais consistente na escolha dos nomes dos parâmetros. Porém, eu entendo que o desenvolvimento de qualquer software é uma atividade dinâmica que envolve diversas pessoas, durante um longo período de tempo, e ter essa consistência não é uma tarefa simples.&lt;/p&gt;
&lt;p&gt;De qualquer forma, eu não acho que o nome desses parâmetros (i e j) sejam bons indicadores do que eles são. Repare que o parâmetro i pode receber uma string ou uma lista, mas o parâmetro &lt;code&gt;j&lt;/code&gt; só recebe uma string, que é o nome da nova (e única) coluna criada. À primeira vista, isso pareceu meio confuso para mim.&lt;/p&gt;
&lt;h2&gt;Exemplos de uso&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s1"&gt;'A(weekly)-2020'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                   &lt;span class="s1"&gt;'A(weekly)-2021'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;77&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                   &lt;span class="s1"&gt;'B(weekly)-2020'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;44&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                   &lt;span class="s1"&gt;'B(weekly)-2021'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;43&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;67&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;44&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                   &lt;span class="s1"&gt;'week'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]})&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="table-responsive"&gt;
&lt;table border="0" class="table text-center dataframe table-striped table-hover"&gt;
&lt;thead class="table-secondary"&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;A(weekly)-2020&lt;/th&gt;
&lt;th&gt;A(weekly)-2021&lt;/th&gt;
&lt;th&gt;B(weekly)-2020&lt;/th&gt;
&lt;th&gt;B(weekly)-2021&lt;/th&gt;
&lt;th&gt;week&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;77&lt;/td&gt;
&lt;td&gt;44&lt;/td&gt;
&lt;td&gt;56&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;td&gt;59&lt;/td&gt;
&lt;td&gt;34&lt;/td&gt;
&lt;td&gt;33&lt;/td&gt;
&lt;td&gt;43&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;3&lt;/th&gt;
&lt;td&gt;90&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;4&lt;/th&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;67&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;5&lt;/th&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;45&lt;/td&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;44&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;
&lt;span class="n"&gt;Index&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
  &lt;span class="s1"&gt;'A(weekly)-2020'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;'A(weekly)-2021'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;'B(weekly)-2020'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;'B(weekly)-2021'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;'week'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'object'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Neste caso não seria necessário passar o valor do parâmetro `suffix` já que por padrão ele é '\d+'&lt;/span&gt;

&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wide_to_long&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;stubnames&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'A(weekly)'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'B(weekly)'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'week'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'year'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;sep&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;suffix&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'\d+'&lt;/span&gt;
              &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="table-responsive"&gt;
&lt;table border="0" class="table text-center dataframe table-striped table-hover"&gt;
&lt;thead class="table-secondary"&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;A(weekly)&lt;/th&gt;
&lt;th&gt;B(weekly)&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;week&lt;/th&gt;
&lt;th&gt;year&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;2020&lt;/th&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;th&gt;2020&lt;/th&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;44&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;3&lt;/th&gt;
&lt;th&gt;2020&lt;/th&gt;
&lt;td&gt;59&lt;/td&gt;
&lt;td&gt;33&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;4&lt;/th&gt;
&lt;th&gt;2020&lt;/th&gt;
&lt;td&gt;90&lt;/td&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;5&lt;/th&gt;
&lt;th&gt;2020&lt;/th&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;6&lt;/th&gt;
&lt;th&gt;2020&lt;/th&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;2021&lt;/th&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;th&gt;2021&lt;/th&gt;
&lt;td&gt;77&lt;/td&gt;
&lt;td&gt;56&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;3&lt;/th&gt;
&lt;th&gt;2021&lt;/th&gt;
&lt;td&gt;34&lt;/td&gt;
&lt;td&gt;43&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;4&lt;/th&gt;
&lt;th&gt;2021&lt;/th&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;5&lt;/th&gt;
&lt;th&gt;2021&lt;/th&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;67&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;6&lt;/th&gt;
&lt;th&gt;2021&lt;/th&gt;
&lt;td&gt;45&lt;/td&gt;
&lt;td&gt;44&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Para transformar essa tabela do formato longo para o amplo (wide), podemos utilizar o método &lt;code&gt;.unstack&lt;/code&gt;, como mostra o exemplo a seguir.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="c1"&gt;# captura a resposta da célula anterior&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unstack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="table-responsive"&gt;
&lt;table border="0" class="table text-center dataframe table-striped table-hover"&gt;
&lt;thead class="table-secondary"&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th colspan="2" halign="left"&gt;A(weekly)&lt;/th&gt;
&lt;th colspan="2" halign="left"&gt;B(weekly)&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;year&lt;/th&gt;
&lt;th&gt;2020&lt;/th&gt;
&lt;th&gt;2021&lt;/th&gt;
&lt;th&gt;2020&lt;/th&gt;
&lt;th&gt;2021&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;week&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;77&lt;/td&gt;
&lt;td&gt;44&lt;/td&gt;
&lt;td&gt;56&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;3&lt;/th&gt;
&lt;td&gt;59&lt;/td&gt;
&lt;td&gt;34&lt;/td&gt;
&lt;td&gt;33&lt;/td&gt;
&lt;td&gt;43&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;4&lt;/th&gt;
&lt;td&gt;90&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;5&lt;/th&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;67&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;6&lt;/th&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;45&lt;/td&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;44&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h2&gt;Um exemplo avançado do uso do parâmetro &lt;code&gt;suffix&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;A página da documentação menciona rapidamente um caso de uso alternativo para o uso parâmetro &lt;code&gt;suffix&lt;/code&gt;. Na verdade, essa menção encontra-se na própria descrição do parâmetro &lt;code&gt;suffix&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Imagine que temos dois produtos ‘A’ e ‘B’ e três canais de anúncio: &lt;span class="caps"&gt;TV&lt;/span&gt;, internet e rádio. Agora, digamos que estejamos interessados somente nos dados para dois canais de anúncio: &lt;span class="caps"&gt;TV&lt;/span&gt; e internet.&lt;/p&gt;
&lt;p&gt;Podemos utilizar o poder das expressões regulares para transformar os dados referente a esses dois canais de vendas e deixar o terceiro intacto.&lt;/p&gt;
&lt;p&gt;Neste caso, basta definir o parâmetro &lt;code&gt;suffix&lt;/code&gt; com o seguinte valor &lt;code&gt;suffix=‘(tv|internet)’&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s1"&gt;'A-tv'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                   &lt;span class="s1"&gt;'A-internet'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                   &lt;span class="s1"&gt;'B-tv'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                   &lt;span class="s1"&gt;'B-internet'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                   &lt;span class="s1"&gt;'B-radio'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                   &lt;span class="s1"&gt;'id'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                   &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="table-responsive"&gt;
&lt;table border="0" class="table text-center dataframe table-striped table-hover"&gt;
&lt;thead class="table-secondary"&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;A-tv&lt;/th&gt;
&lt;th&gt;A-internet&lt;/th&gt;
&lt;th&gt;B-tv&lt;/th&gt;
&lt;th&gt;B-internet&lt;/th&gt;
&lt;th&gt;B-radio&lt;/th&gt;
&lt;th&gt;id&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;57&lt;/td&gt;
&lt;td&gt;76&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;td&gt;78&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;93&lt;/td&gt;
&lt;td&gt;67&lt;/td&gt;
&lt;td&gt;27&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;3&lt;/th&gt;
&lt;td&gt;37&lt;/td&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;td&gt;89&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;4&lt;/th&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;78&lt;/td&gt;
&lt;td&gt;63&lt;/td&gt;
&lt;td&gt;59&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wide_to_long&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;stubnames&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'A'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'B'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'type'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;sep&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;suffix&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'(tv|internet)'&lt;/span&gt;
              &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="table-responsive"&gt;
&lt;table border="0" class="table text-center dataframe table-striped table-hover"&gt;
&lt;thead class="table-secondary"&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;B-radio&lt;/th&gt;
&lt;th&gt;A&lt;/th&gt;
&lt;th&gt;B&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;id&lt;/th&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;th&gt;tv&lt;/th&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;57&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;tv&lt;/th&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;td&gt;78&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;th&gt;tv&lt;/th&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;67&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;3&lt;/th&gt;
&lt;th&gt;tv&lt;/th&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;37&lt;/td&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;4&lt;/th&gt;
&lt;th&gt;tv&lt;/th&gt;
&lt;td&gt;59&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;78&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;th&gt;internet&lt;/th&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;76&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;internet&lt;/th&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;th&gt;internet&lt;/th&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;93&lt;/td&gt;
&lt;td&gt;27&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;3&lt;/th&gt;
&lt;th&gt;internet&lt;/th&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;td&gt;89&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;4&lt;/th&gt;
&lt;th&gt;internet&lt;/th&gt;
&lt;td&gt;59&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;63&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Note que a coluna ‘B-radio’ ainda persiste no resultado final. Se não a desejamos, bastar aplicar o método &lt;code&gt;drop&lt;/code&gt; nessa coluna.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wide_to_long&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;stubnames&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'A'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'B'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                    &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'type'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;sep&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;suffix&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'(tv|internet)'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'B-radio'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'columns'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="table-responsive"&gt;
&lt;table border="0" class="table text-center dataframe table-striped table-hover"&gt;
&lt;thead class="table-secondary"&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;A&lt;/th&gt;
&lt;th&gt;B&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;id&lt;/th&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;th&gt;tv&lt;/th&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;57&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;tv&lt;/th&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;td&gt;78&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;th&gt;tv&lt;/th&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;67&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;3&lt;/th&gt;
&lt;th&gt;tv&lt;/th&gt;
&lt;td&gt;37&lt;/td&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;4&lt;/th&gt;
&lt;th&gt;tv&lt;/th&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;78&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;th&gt;internet&lt;/th&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;76&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;internet&lt;/th&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;th&gt;internet&lt;/th&gt;
&lt;td&gt;93&lt;/td&gt;
&lt;td&gt;27&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;3&lt;/th&gt;
&lt;th&gt;internet&lt;/th&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;td&gt;89&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;4&lt;/th&gt;
&lt;th&gt;internet&lt;/th&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;63&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h2&gt;Dica para definir &lt;code&gt;sutbnames&lt;/code&gt; com expressões regulares&lt;/h2&gt;
&lt;p&gt;Um outro exemplo rapidamente mencionado na documentação, é utilizar expressões regulares para identificar os prefixos de forma programática.&lt;/p&gt;
&lt;p&gt;Por exemplo, voltemos ao dataframe do primeiro exemplo.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="table-responsive"&gt;
&lt;table border="1" class="table text-center dataframe table-striped table-hover"&gt;
&lt;thead class="table-secondary"&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;A(weekly)-2020&lt;/th&gt;
&lt;th&gt;A(weekly)-2021&lt;/th&gt;
&lt;th&gt;B(weekly)-2020&lt;/th&gt;
&lt;th&gt;B(weekly)-2021&lt;/th&gt;
&lt;th&gt;week&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;77&lt;/td&gt;
&lt;td&gt;44&lt;/td&gt;
&lt;td&gt;56&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;td&gt;59&lt;/td&gt;
&lt;td&gt;34&lt;/td&gt;
&lt;td&gt;33&lt;/td&gt;
&lt;td&gt;43&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;3&lt;/th&gt;
&lt;td&gt;90&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;4&lt;/th&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;67&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;5&lt;/th&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;45&lt;/td&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;44&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Poderíamos encontrar os valores dos prefixos utilizando o seguinte código:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;stubnames&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
              &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;match&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;'[A-B]\(.*\)'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;match&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
                  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;stubnames&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'A(weekly)'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'B(weekly)'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Outras funções para transformação de um dataframe&lt;/h2&gt;
&lt;p&gt;A biblioteca pandas também oferece outras funções para alterar a estrutura de um dataframe conforme as nossas necessidades.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pd.melt&lt;/code&gt; - converte um dataframe do formato wide para o formato longo.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pd.pivot&lt;/code&gt; - pode converter um dataframe do formato longo para wide.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dataframe.pivot_table&lt;/code&gt; - possui quase a mesma função que a função &lt;code&gt;pd.pivot&lt;/code&gt; porém realiza operações de agregação de dados por exemplo, calcular uma média, mediana, realizar uma contagem.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dataframe.stack&lt;/code&gt; empilha colunas em índices;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dataframe.unstack&lt;/code&gt; desempilha índices em colunas.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Conclusão&lt;/h2&gt;
&lt;p&gt;Neste rápido tutorial, vimos o uso da função &lt;code&gt;pd.wide_to_long&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Eu pessoalmente não conhecia essa função até bem pouco tempo atrás. Talvez porque o problema que essa função se propõe a resolver seja bem específico.&lt;/p&gt;</content><category term="data-analysis"></category><category term="python"></category><category term="pandas"></category><category term="reshaping"></category></entry></feed>